{"componentChunkName":"component---src-templates-post-page-jsx","path":"/blog/go-gui-apps-on-windows","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Visual applications with Go on Windows","date":"2016-01-02","description":null,"tags":["go","windows","gui","app","gtk","msys2","mingw","setup"]},"html":"<h2>Introduction</h2>\n<p><a href=\"https://golang.org/\">Go</a> is a great programming language, supporting more and more cross-platform libraries for the creation of visual applications - especially <a href=\"https://github.com/gotk3/gotk3\">GTK 3</a>.</p>\n<p>The benefits are evident - providing a uniform graphical user interface (GUI) when developing <em>native</em> programs. I definitely appreciated GTK+'s flexibility and portability when creating <a href=\"/blog/moondeploy-2/\">MoonDeploy</a>, my cross-platform deployment tool.</p>\n<p>The setup on Linux is generally very simple - on Ubuntu, for example, you'll just have to install the <strong>gcc</strong> compiler system and the required C libraries via the <em>apt-get</em> package manager.</p>\n<p>In this short article we will see how to configure a 64-bit Windows system in order to develop a visual application.</p>\n<h2>Installing msys2</h2>\n<p>We'll employ <strong>msys2</strong>, a brilliant development environment for Windows, including the <strong>MinGW-w64</strong> compiler:</p>\n<ol>\n<li>Go to the <a href=\"https://msys2.github.io/\">msys2 website</a>, download the installer having <code class=\"language-text\">x86_64</code> in its name and run it</li>\n<li>Follow the wizard; we'll assume that msys is installed into the default directory <code class=\"language-text\">C:\\msys64</code></li>\n<li>As soon as the wizard has finished, run <em>msys2's console</em> (which should be suggested by the wizard itself)</li>\n<li>\n<p>In the console, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pacman --needed -Sy <span class=\"token function\">bash</span> pacman pacman-mirrors msys2-runtime</code></pre></div>\n</li>\n<li>Close and restart the console</li>\n<li>\n<p>Run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pacman -Su</code></pre></div>\n</li>\n<li>Restart the console</li>\n<li>\n<p>To install <em>MinGW-w64</em>, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pacman -S mingw-w64-x86_64-gcc</code></pre></div>\n</li>\n<li>\n<p>To install <em>pkg-config</em>, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pacman -S mingw64/mingw-w64-x86_64-pkg-config</code></pre></div>\n</li>\n<li>Add the following paths to your <code class=\"language-text\">PATH</code> environment variable:</li>\n<li><code class=\"language-text\">C:\\msys64\\mingw64\\bin</code></li>\n<li><code class=\"language-text\">C:\\msys64\\usr\\bin</code></li>\n</ol>\n<h2>Installing the GTK+ 3 libraries</h2>\n<p>Installing GTK+ 3 with msys2 requires a single instruction in msys2's console:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pacman -S mingw64/mingw-w64-x86_64-gtk3</code></pre></div>\n<p>Generally speaking, if you wish to look for a library whose you don't know the exact name, try running:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pacman -Ss text_to_search</code></pre></div>\n<p><strong>Please, note:</strong> for 32-bit systems, the process is similar - just use a different installer and replace the <strong>x86_64</strong> qualifier in package names.</p>\n<p>Now, you can close msys2 - the installed tools will be available in DOS command windows as well.</p>\n<h2>Installing Go</h2>\n<ol>\n<li>Install Go by downloading and running the installer from <a href=\"https://golang.org/\">its website</a></li>\n<li>Set the <strong>GOROOT</strong> environment variable to Go's root directory</li>\n<li>Add Go's <strong>bin</strong> subdirectory to the <strong>PATH</strong> environment variable</li>\n<li>Create a directory that will be your <a href=\"https://golang.org/doc/code.html\">Go path</a> (for example, <strong>C:\\GoPath</strong>)</li>\n<li>Assign such directory to the <strong>GOPATH</strong> environment variable</li>\n</ol>\n<h2>Installing GUI libraries for Go</h2>\n<p>This task usually requires Go's setup tool, <code class=\"language-text\">go get</code>; in particular, for <a href=\"https://github.com/gotk3/gotk3\">gotk3</a>, you'll need to run, <em>in a DOS command window</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">go get github.com/gotk3/gotk3/gtk</code></pre></div>\n<p>If everything was installed correctly, the command should print no output, completing after a few minutes; otherwise, please double-check your <em>msys2</em> setup.</p>\n<h2>Compiling a visual Go program</h2>\n<p>By default, on Windows, running GUI programs created with Go will show the DOS window as well, in the background.</p>\n<p>To prevent this default behavior, you can compile the app by adding the following parameter to <code class=\"language-text\">go build</code>: <code class=\"language-text\">-ldflags &quot;-H windowsgui&quot;</code>. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">go build -ldflags <span class=\"token string\">\"-H windowsgui\"</span> SourceFile.go</code></pre></div>\n<p>On Linux, no additional arguments are required.</p>\n<h2>Further references</h2>\n<ul>\n<li><a href=\"https://msys2.github.io/\">msys2</a></li>\n<li><a href=\"http://mingw-w64.org/\">MinGW-w64</a></li>\n<li><a href=\"https://golang.org/\">Go language</a></li>\n<li><a href=\"https://github.com/gotk3/gotk3\">gotk3</a></li>\n<li><a href=\"http://www.gtk.org/\">GTK+</a></li>\n<li><a href=\"https://glade.gnome.org/\">Glade</a></li>\n<li><a href=\"https://github.com/giancosta86/moondeploy\">MoonDeploy</a></li>\n</ul>"}},"pageContext":{"nodeId":"ac58ca01-8917-520b-ac22-1d6925017467"}},"staticQueryHashes":["3159585216","3567824559"]}